#!/usr/bin/env bash
ID=$(xinput list --id-only 'Telink Wireless Receiver')


mkdir -p /tmp/xkb/symbols

cat >/tmp/xkb/symbols/custom <<\EOF

partial modifier_keys
xkb_symbols "remote" {
    replace key <FK01>  { [ XF86AudioPlay ] };
    replace key <FK02>  { [ XF86AudioPrev ] };
    replace key <FK03>  { [ XF86AudioNext ] };
    replace key <FK04>  { [ XF86AudioMute ] };
    replace key <FK05>  { [ XF86AudioLowerVolume ] };
    replace key <FK06>  { [ XF86AudioRaiseVolume ] };
    replace key <FK08>  { [ XF86Search ] };
    replace key <FK11>  { [ XF86MonBrightnessDown ] };
    replace key <FK12>  { [ XF86MonBrightnessUp ] };
};

EOF

# (1) We list our current definition
# (2) Modify it to have a keyboard mapping using the name
#     we used above, in this case it's the "remote" definition
#     described in the file named "custom" which we specify in
#     this world as "custom(remote)".
# (3) Now we take that as input back into our definition of the
#     keyboard. This includes the file we just made, read in last,
#     so as to override any prior definitions.  Importantly we 
#     need to include the directory of the place we placed the file
#     to be considered when reading things in.
#
# Also notice that we aren't including exactly the 
# directory we specified above. In this case, it will be looking
# for a directory structure similar to /usr/share/X11/xkb
# 
# What we provided was a "symbols" file. That's why above we put
# the file into a "symbols" directory, which is not being included
# below.
setxkbmap -device $ID -print \
 | sed 's/\(xkb_symbols.*\)"/\1+custom(remote)"/' \
 | xkbcomp -I/tmp/xkb -i $ID -synch - $DISPLAY
echo $ID
